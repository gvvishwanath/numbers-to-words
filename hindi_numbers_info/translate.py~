import sys

from simpleTranslations import *
from biggerNumbers import *
from grammaticalDetails import *

from error_checking.assertions import integerAssert
#from errorHandling import debugHelper1

def message():
    print "(The capital letters, if any, indicate 'hard' sounds.)\n" 


def translateNumber(num):
    this = globals()[sys._getframe().f_code.co_name]
    integerAssert(num, this)

    translation = ""

    if num < 0
        translation = minusSignWord + " " + translateNumber(-num)

    elif num in basicNumbers.keys():
        translation = basicNumbers[num]

    elif num < 1000:
        t100 = translateNumber(num/100) + " " + biggerNumbers[100]
        rest = translateNumber(num%100)
        
        translation = t100 + " " + rest
        if rest == basicNumbers[0]:
            translation = t100

    elif num < Lakh:
        t1000 = translateNumber(num/1000) + " " + biggerNumbers[1000]
        rest = translateNumber(num%1000)

        translation = t1000 + " " + rest
        if rest == basicNumbers[0]:
            translation = t1000

    elif num < Crore:
        tLakh = translateNumber(num/Lakh) + " " + biggerNumbers[Lakh]
        rest = translateNumber(num % Lakh)

        translation = tLakh + " " + rest
        if rest == basicNumbers[0]:
            translation = tLakh

    else:
        tCrore = translateNumber(num/Crore) + " " + biggerNumbers[Crore]
        rest = translateNumber(num % Crore)

        translation = tCrore + " " + rest
        if rest == basicNumbers[0]:
            translation = tCrore

    return translation        
